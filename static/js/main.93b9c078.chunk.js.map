{"version":3,"sources":["card1.jpeg","card2.jpeg","card3.jpeg","Navbar.js","Card.js","ListCard.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","Card","style","width","src","card1","alt","fontWeight","borderRadius","card2","card3","ListCard","border","class","padding","Footer","background","height","opacity","textAlign","color","paddingTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93b9c078.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card1.c16c55d5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/card2.f572d5bd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/card3.7a71c16d.jpeg\";","import React, { Component } from 'react';\nimport \"./Navbar.css\";\n\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" id=\"navBAR\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/\" id=\"navbarBrand\">TEST</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item active px-3\">\n                <a className=\"nav-link\" id=\"homePage\" href=\"/\">HOMEPAGE <span className=\"sr-only\">(current)</span></a>\n              </li>\n              <li className=\"nav-item px-3\">\n                <a className=\"nav-link\" href=\"/\">ABOUT US</a>\n              </li>\n              <li className=\"nav-item px-3\">\n                <a className=\"nav-link\" href=\"/\">CLIENTS</a>\n              </li>\n              <li className=\"nav-item px-3\">\n                <a className=\"nav-link\" href=\"/\">CAREERS</a>\n              </li>\n              <li className=\"nav-item px-3\">\n                <a className=\"nav-link\" href=\"/\">CONTACT US</a>\n              </li>\n            </ul>\n\n          </div>\n        </div>\n        \n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n\n\n","import React, { Component } from 'react';\nimport \"./Card.css\";\nimport card1 from \"./card1.jpeg\";\nimport card2 from \"./card2.jpeg\";\nimport card3 from \"./card3.jpeg\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"cotainer-fluid d-flex\">\n        <div className=\"card col-lg-4 text-center\" id=\"card-margin\" style={{ width: \"18rem\" }}>\n          <img src={card1} className=\"card-img-top\" alt=\"image1\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\" style={{fontWeight: \"bold\"}}>Card title</h5>\n            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            <a href=\"/\" className=\"btn btn-warning\"  style={{fontWeight: \"bold\", borderRadius: \"5px\"}}>MORE INFO</a>\n          </div>\n        </div>\n\n        <div className=\"card col-lg-4 text-center\" id=\"card-margin\" style={{ width: \"18rem\" }}>\n          <img src={card2} className=\"card-img-top\" alt=\"image2\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\" style={{fontWeight: \"bold\"}}>Card title</h5>\n            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            <a href=\"/\" className=\"btn btn-warning\" style={{fontWeight: \"bold\", borderRadius: \"5px\"}}>MORE INFO</a>\n          </div>\n        </div>\n\n        <div className=\"card col-lg-4 text-center\" id=\"card-margin\" style={{ width: \"18rem\" }}>\n          <img src={card3} className=\"card-img-top\" alt=\"image3\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\" style={{fontWeight: \"bold\"}}>Card title</h5>\n            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            <a href=\"/\" className=\"btn btn-warning\" style={{fontWeight: \"bold\", borderRadius: \"5px\"}}>MORE INFO</a>\n          </div>\n        </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default Card;\n\n\n","import React, { Component } from 'react';\nimport card1 from \"./card1.jpeg\";\n\nclass ListCard extends Component {\n  render() {\n    return (\n      <div className=\"cotainer-fluid d-flex\">\n        <div className=\"card col-lg-8\" id=\"card-margin\" style={{ width: \"18rem\", border: \"0px\",}}>\n          <h1 className=\"card-title\">Libero volutpat pulvinar</h1>\n          <h5 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h5>\n          <img src={card1} className=\"card-img-top\" alt=\"image1\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Card title</h5>\n            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            <a href=\"/\" className=\"btn btn-warning\" style={{fontWeight: \"bold\", borderRadius: \"5px\"}}>MORE INFO</a>\n          </div>\n        </div>\n        <div className=\"col-lg-4\">\n          <div class=\"card\" style={{ width: \"18rem\", border: \"0px\"}}>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\" style={{ fontWeight: \"bold\" }}>Categories</h5>\n              </div>\n              <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\">Reprehenderit exercitation ex mollit dolor velit nulla ad duis.</li>\n                <li class=\"list-group-item\">Mollit fugiat ut id adipisicing commodo sint.</li>\n                <li class=\"list-group-item\">Eiusmod duis quis ipsum aliqua minim qui officia voluptate adipisicing proident exercitation dolore.</li>\n              </ul>\n              <a href=\"/\" className=\"btn btn-warning\" style={{fontWeight: \"bold\", borderRadius: \"5px\", padding: \"2px\"}}>MORE INFO</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ListCard;\n","import React, { Component } from 'react';\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div style={{background: \"black\", height: \"100px\", opacity: \"0.9\"}} className=\"Footer zigzag\">\n        <p style={{ textAlign: \"center\", color: \"grey\", paddingTop: \"30px\"}}>Copyright section</p>\n      </div>\n    )\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./Navbar\";\nimport Card from \"./Card\";\nimport ListCard from './ListCard';\nimport Footer from './Footer';\n\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Card />\n        <hr />\n        <ListCard />\n      </div>\n      <Footer />\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}